buildscript {
    repositories {
        maven {
            url 'https://maven.fabric.io/public'
        }

        google()

    }

    dependencies {
        //noinspection GradleDynamicVersion
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven { url "https://maven.google.com" }
    mavenCentral()
}

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))


android {

    Properties keyProperties = new Properties()
    keyProperties.load(new FileInputStream(file(project.property("KeyProperties"))))

    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 118
        versionName "and-0.2.3.118"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            v2SigningEnabled false
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }

    flavorDimensions "default"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    productFlavors {

        surilla {
            dimension "default"
            buildConfigField "String", "AUTHORITY", "\"surilla.com\""
            buildConfigField "String", "BASE_URL", "\"https://surilla.com\""
            buildConfigField "boolean", "isTestNet", "true"
            sourceSets {
                main.res.srcDirs = ['src/main/res', 'src/surilla/res']
            }
            applicationId "com.surilla.android"
        }

        teambrella {
            dimension "default"
            buildConfigField "String", "AUTHORITY", "\"teambrella.com\""
            buildConfigField "String", "BASE_URL", "\"https://teambrella.com\""
            buildConfigField "boolean", "isTestNet", "false"
            sourceSets {
                main.res.srcDirs = ['src/main/res', 'src/teambrella/res']
            }
            applicationId "com.teambrella.android"
        }
    }

    lintOptions {
        abortOnError false
    }

    splits {
        abi {
            enable true
            reset()
            include "x86", "x86_64", "armeabi-v7a", "arm64-v8a"
            universalApk false
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })


    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:1.2.30"

    /* Support */
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:27.1.0'
    implementation 'com.android.support:recyclerview-v7:27.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.android.support:design:27.1.0'

    /* Server communication */
    implementation 'com.squareup.okhttp3:logging-interceptor:3.6.0'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.3.0'
    implementation 'com.google.code.gson:gson:2.8.2'

    implementation 'org.chalup.microorm:microorm:0.8.0'
    implementation 'com.journeyapps:zxing-android-embedded:3.5.0'

    /* Ethereum */
    implementation 'org.bitcoinj:bitcoinj-core:0.14.4'
    implementation 'org.ethereum:geth:1.6.7'

    /* Utils */
    implementation 'com.jakewharton:butterknife:8.5.1'
    kapt 'com.jakewharton:butterknife-compiler:8.5.1'

    /*Image Loader*/
    implementation 'de.hdodenhof:circleimageview:2.1.0'
    implementation("com.github.bumptech.glide:glide:4.6.1") {
        exclude group: "com.android.support"
    }
    kapt 'com.github.bumptech.glide:compiler:4.6.1'

    /* *Facebook SDK*/
    implementation 'com.facebook.android:facebook-android-sdk:4.26.0'

    implementation 'com.google.android.gms:play-services-gcm:12.0.0'
    implementation 'com.google.android.gms:play-services-analytics:12.0.0'
    implementation 'com.google.android.gms:play-services-auth:12.0.0'
    implementation 'com.google.firebase:firebase-core:12.0.0'
    implementation 'com.google.firebase:firebase-messaging:12.0.0'


    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.0'

    implementation 'org.java-websocket:Java-WebSocket:1.3.4'

    /* Test */
    testImplementation 'junit:junit:4.12'
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.1@aar') {
        transitive = true
    }

    /* Dagger */
    implementation 'com.google.dagger:dagger-android:2.11'
    implementation 'com.google.dagger:dagger-android-support:2.11'
    // if you use the support libraries
    kapt 'com.google.dagger:dagger-android-processor:2.11'
    kapt 'com.google.dagger:dagger-compiler:2.11'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
}

ext.abiCodes = ['armeabi-v7a': 1, 'arm64-v8a': 2, 'x86': 3, 'x86_64': 4]

import com.android.build.OutputFile

android.applicationVariants.all { variant ->
    variant.outputs.each { output ->
        def baseAbiVersionCode =
                project.ext.abiCodes.get(output.getFilter(OutputFile.ABI))
        if (baseAbiVersionCode != null) {
            output.versionCodeOverride =
                    baseAbiVersionCode * 1000 + variant.versionCode
        }
    }
}

apply plugin: 'com.google.gms.google-services'
